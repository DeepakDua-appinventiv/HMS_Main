swagger: "2.0"
info:
  title: Hospital Management Project API Documentation
  description: comprehensive set of APIs empowers you to seamlessly manage and streamline various aspects of hospital operations, patient care, and administrative tasks.
  version: 1.0
servers:
  - url: "http://localhost:5000/"
    description: This is my local server

tags:
  -name: Patient Actions
  descriptions: Patient related API's 
  -name: Staff Actions
  descriptions: Staff related API's
  -name: Admin Actions
  descriptions: Admin related API's
  -name: Appointment Actions
  descriptions: Appointment related API's
  -name: Medical History Actions
  descriptions: Medical History related API's
  -name: Inventory Actions
  descriptions: Inventory realted API'S
  -name: Medication Bill Actions
  descriptions: Medication Bill related API's
  -name: Admit Actions
  descriptions: Admit related API's

schemes: [http, https]

paths:
  /patient/signup:
    post:
      summary: Patient SignUp
      tags:
        - Patient Actions
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: body
          name: patient
          schema:
            type: object
            properties:
              name:
                type: string
              email:
                type: string
              password:
                type: string
              dateOfBirth:
                type: date
              gender:
                type: string
              contactInfo:
                type: object
                properties:
                  phoneNumber: 
                    type: string
                  address:
                    type: string
      description: This is patient signUp
      responses:
        200:
          description: Success
          schema: 
            type: object
            properties:
              message:
                type: string
        500:
          description: Internal Server Error
          schema: 
            type: object
            properties:
              message:
                type: string

  /patient/login:
    post:
      summary: Patient Login
      tags:
        - Patient Actions
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: body
          name: patient
          schema:
            type: object
            properties:
              email:
                type: string
              password:
                type: string
      description: This is patient login
      responses:
        200:
          description: Success
          schema: 
            type: object
            properties:
              message:
                type: string
        500:
          description: Internal Server Error
          schema: 
            type: object
            properties:
              message:
                type: string

  /patient/logout:
    get:
      summary: Patient Logout
      tags:
        - Patient Actions
      responses:
        200:
          description: Success
          schema:
            type: object
            properties:
              message:
                type: string
        500:
          description: Internal Server Error
          schema:
            type: object
            properties:
              message:
                type: string

  /patient/getpatient:
    get:
      summary: Get Patient Profile
      tags:
        - Patient Actions
      security:
        - bearerAuth: []
      responses:
        200:
          description: Success
          schema:
            type: object
            properties:
              _id:
                type: string
              name:
                type: string
              email:
                type: string
              dateOfBirth:
                type: string
              gender:
                type: string
              contactInfo:
                type: object
                properties:
                  phoneNumber:
                    type: string
                  address:
                    type: string
        500:
          description: Internal Server Error
          schema:
            type: object
            properties:
              message:
                type: string

  /patient/updatepatient:
    put:
      summary: Update Patient Profile
      tags:
        - Patient Actions
      security:
        - bearerAuth: []
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: body
          name: patientData
          schema:
            type: object
            properties:
              name:
                type: string
              email:
                type: string
              dateOfBirth:
                type: string
              gender:
                type: string
              contactInfo:
                type: object
                properties:
                  phoneNumber:
                    type: string
                  address:
                    type: string
      responses:
        200:
          description: Success
          schema:
            type: object
            properties:
              _id:
                type: string
              name:
                type: string
              email:
                type: string
              dateOfBirth:
                type: string
              gender:
                type: string
              contactInfo:
                type: object
                properties:
                  phoneNumber:
                    type: string
                  address:
                    type: string
        500:
          description: Internal Server Error
          schema:
            type: object
            properties:
              message:
                type: string
        
  /patient/uploadprofile:
    post:
      summary: Upload Patient Profile Picture
      tags:
        - Patient Actions
      security:
        - bearerAuth: []
      produces:
        - application/json
      consumes:
        - multipart/form-data
      parameters:
        - in: formData
          name: file
          type: file
          required: true
          description: The profile picture to upload
      responses:
        200:
          description: Success
          schema:
            type: object
            properties:
              message:
                type: string
              success:
                type: boolean
        500:
          description: Internal Server Error
          schema:
            type: object
            properties:
              message:
                type: string
          
  /patient/deletepatient:
    delete:
      summary: Delete Patient Profile
      tags:
        - Patient Actions
      security:
        - bearerAuth: []
      produces:
        - application/json
      responses:
        200:
          description: Success
          schema:
            type: object
            properties:
              message:
                type: string
        500:
          description: Internal Server Error
          schema:
            type: object
            properties:
              message:
                type: string

  /patient/forgetpassword:
    get:
      summary: Send Password Reset OTP
      tags:
        - Patient Actions
      security:
        - bearerAuth: []
      produces:
        - application/json
      responses:
        200:
          description: Success
          schema:
            type: object
            properties:
              message:
                type: string
        401:
          description: Unauthorized or Server Error
          schema:
            type: object
            properties:
              message:
                type: string

  /patient/resetpassword:
    post:
      summary: Reset Password
      description: Reset a patient's password using OTP.
      tags:
        - Patient Actions
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              otp:
                type: string
                description: The OTP received by the patient.
              newPassword:
                type: string
                description: The new password to set.
              confirmPassword:
                type: string
                description: Confirm the new password.
            required:
              - otp
              - newPassword
              - confirmPassword
      responses:
        200:
          description: Success response
          schema:
            type: object
            properties:
              message:
                type: string
                description: Success message.
        400:
          description: Bad Request
          schema:
            type: object
            properties:
              message:
                type: string
                description: Error message (e.g., password mismatch).
        401:
          description: Unauthorized
          schema:
            type: object
            properties:
              message:
                type: string
                description: Error message (e.g., invalid OTP or server error).

  /staff/login:
    post:
      summary: Staff Login
      tags:
        - Staff Actions
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: body
          name: credentials
          schema:
            type: object
            properties:
              email:
                type: string
              password:
                type: string
      responses:
        201:
          description: Login Success
          schema:
            type: object
            properties:
              message:
                type: string
              token:
                type: string
        400:
          description: Invalid Credentials
          schema:
            type: object
            properties:
              message:
                type: string
        404:
          description: Staff Not Found
          schema:
            type: object
            properties:
              message:
                type: string
        500:
          description: Internal Server Error
          schema:
            type: object
            properties:
              message:
                type: string

  paths:
  /staff/getstaff:
    get:
      summary: Get Staff Profile
      tags:
        - Staff Actions
      produces:
        - application/json
      security:
        - Bearer: []
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/StaffProfileResponse'
        500:
          description: Internal Server Error
          schema:
            type: object
            properties:
              message:
                type: string         

  /staff/getmypatient/{patientId}:
    get:
      summary: Get Patient's Medical History
      tags:
        - Staff Actions
      produces:
        - application/json
      security:
        - Bearer: []
      parameters:
        - in: path
          name: patientId
          required: true
          type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/GetMyPatientResponse'
        404:
          description: Patient or Medical History Not Found
          schema:
            type: object
            properties:
              message:
                type: string
        500:
          description: Internal Server Error
          schema:
            type: object
            properties:
              message:
                type: string

  Patient:
    type: object
    properties:
      _id:
        type: string
      name:
        type: string
      email:
        type: string

  MedicalHistoryWithDoctor:
    type: object
    properties:
      _id:
        type: string
      appointmentId:
        type: object
        properties:
          _id:
            type: string
      diagnozedWith:
        type: object
        properties:
          treatedDoctorName:
            type: object
            properties:
              _id:
                type: string
              name:
                type: string
              email:
                type: string     

  /staff/getmyallpatients:
    get:
      summary: Get All Patients with Medical History
      tags:
        - Staff Actions
      produces:
        - application/json
      security:
        - Bearer: []
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/GetMyAllPatientsResponse'
        404:
          description: No Patients Found
          schema:
            type: object
            properties:
              message:
                type: string
        500:
          description: Internal Server Error
          schema:
            type: object
            properties:
              message:
                type: string

  PatientWithMedicalHistory:
    type: object
    properties:
      patient:
        $ref: '#/definitions/Patient'
      medicalHistory:
        type: array
        items:
          $ref: '#/definitions/MedicalHistoryWithDoctor'

  Patient:
    type: object
    properties:
      _id:
        type: string
      name:
        type: string
      email:
        type: string

  MedicalHistoryWithDoctor:
    type: object
    properties:
      _id:
        type: string
      appointmentId:
        type: object
        properties:
          _id:
            type: string
      diagnozedWith:
        type: object
        properties:
          treatedDoctorName:
            type: object
            properties:
              _id:
                type: string
              name:
                type: string
              email:
                type: string

  /staff/getstaffbyrole:
    get:
      summary: Get Staff by Role
      tags:
        - Staff Actions
      produces:
        - application/json
      security:
        - Bearer: []
      parameters:
        - in: query
          name: role
          type: string
          required: true
          description: Role of the staff member
        - in: query
          name: page
          type: integer
          description: Page number (default: 1)
        - in: query
          name: itemsPerPage
          type: integer
          description: Number of items per page (default: 5)
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/StaffProfile'
        404:
          description: No Staff Profiles Found
          schema:
            type: object
            properties:
              message:
                type: string
        400:
          description: Role Required
          schema:
            type: object
            properties:
              message:
                type: string
        500:
          description: Internal Server Error
          schema:
            type: object
            properties:
              message:
                type: string

  /staff/getstaffbyspecialization:
    get:
      summary: Get Staff by Specialization
      tags:
        - Staff Actions
      produces:
        - application/json
      security:
        - Bearer: []
      parameters:
        - in: query
          name: role
          type: string
          required: true
          description: Role of the staff member
        - in: query
          name: specialization
          type: string
          required: true
          description: Specialization of the staff member
        - in: query
          name: page
          type: integer
          description: Page number (default: 1)
        - in: query
          name: itemsPerPage
          type: integer
          description: Number of items per page (default: 5)
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/StaffProfile'
        404:
          description: No Staff Profiles Found
          schema:
            type: object
            properties:
              message:
                type: string
        400:
          description: Role and Specialization Required
          schema:
            type: object
            properties:
              message:
                type: string
        500:
          description: Internal Server Error
          schema:
            type: object
            properties:
              message:
                type: string

  /staff/updatestaff:
    put:
      summary: Update Staff by Staff Member
      tags:
        - Staff Actions
      produces:
        - application/json
      consumes:
        - application/json
      security:
        - Bearer: []
      parameters:
        - in: body
          name: staffData
          schema:
            $ref: '#/definitions/UpdateStaffInput'
        - in: header
          name: Authorization
          description: Bearer Token
          required: true
          type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/StaffProfile'
        404:
          description: Staff Not Found
          schema:
            type: object
            properties:
              message:
                type: string
        500:
          description: Internal Server Error
          schema:
            type: object
            properties:
              message:
                type: string

  StaffProfile:
    type: object
    properties:
      _id:
        type: string
      name:
        type: string
      email:
        type: string
      role:
        type: string

  /staff/uploadprofile:
    post:
      summary: Upload Staff Profile
      tags:
        - Staff Actions
      produces:
        - application/json
      consumes:
        - multipart/form-data
      security:
        - Bearer: []
      parameters:
        - in: formData
          name: file
          type: file
        - in: header
          name: Authorization
          description: Bearer Token
          required: true
          type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/UploadProfileResponse'
        400:
          description: No File Uploaded
          schema:
            type: object
            properties:
              message:
                type: string
              success:
                type: boolean
        404:
          description: Staff Not Found
          schema:
            type: object
            properties:
              message:
                type: string
              success:
                type: boolean
        500:
          description: Internal Server Error
          schema:
            type: object
            properties:
              message:
                type: string

  /staff/logout:
    get:
      summary: Staff Logout
      tags:
        - Staff Actions
      produces:
        - application/json
      security:
        - Bearer: []
      parameters:
        - in: header
          name: Authorization
          description: Bearer Token
          required: true
          type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/LogoutResponse'
        500:
          description: Internal Server Error
          schema:
            type: object
            properties:
              message:
                type: string

  /staff/forgetpassword:
    get:
      summary: Staff Forget Password
      tags:
        - Staff Actions
      produces:
        - application/json
      security:
        - Bearer: []
      parameters:
        - in: header
          name: Authorization
          description: Bearer Token
          required: true
          type: string
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/ForgetPasswordResponse'
        401:
          description: Unauthorized or Server Error
          schema:
            type: object
            properties:
              message:
                type: string

  /staff/resetpassword:
    post:
      summary: Reset Password
      description: Reset a staff member's password using OTP.
      tags:
        - Staff Actions
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              otp:
                type: string
                description: The OTP received by the staff member.
              newPassword:
                type: string
                description: The new password to set.
              confirmPassword:
                type: string
                description: Confirm the new password.
            required:
              - otp
              - newPassword
              - confirmPassword
      responses:
        200:
          description: Success response
          schema:
            type: object
            properties:
              message:
                type: string
                description: Success message.
        400:
          description: Bad Request
          schema:
            type: object
            properties:
              message:
                type: string
                description: Error message (e.g., password mismatch).
        401:
          description: Unauthorized
          schema:
            type: object
            properties:
              message:
                type: string
                description: Error message (e.g., invalid OTP or server error).

  /admin/login:
    post:
      summary: Admin Login
      tags:
        - Admin Actions
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: credentials
          schema:
            type: object
            properties:
              email:
                type: string
              password:
                type: string
            required:
              - email
              - password
      responses:
        200:
          description: Successful login
          schema:
            $ref: '#/definitions/AdminLoginResponse'
        400:
          description: Invalid credentials
          schema:
            type: object
            properties:
              message:
                type: string
        404:
          description: Admin not found
          schema:
            type: object
            properties:
              message:
                type: string
        500:
          description: Internal Server Error
          schema:
            type: object
            properties:
              message:
                type: string

  /admin/addstaff:
    post:
      summary: Add Staff
      tags:
        - Admin Actions
      consumes:
        - application/json
      produces:
        - application/json
      security:
        - jwtToken: []
      parameters:
        - in: body
          name: staffData
          schema:
            type: object
            properties:
              name:
                type: string
              email:
                type: string
              password:
                type: string
              role:
                type: string
            required:
              - name
              - email
              - password
              - role
      responses:
        201:
          description: Staff added successfully
          schema:
            $ref: '#/definitions/AddStaffResponse'
        400:
          description: Staff already exists or missing fields
          schema:
            type: object
            properties:
              message:
                type: string
        500:
          description: Internal Server Error
          schema:
            type: object
            properties:
              message:
                type: string

  /admin/updatestaff:
    put:
      summary: Update Staff
      tags:
        - Admin Actions
      consumes:
        - application/json
      produces:
        - application/json
      security:
        - jwtToken: []
      parameters:
        - in: body
          name: staffData
          schema:
            type: object
            properties:
              name:
                type: string
              email:
                type: string
              password:
                type: string
              role:
                type: string
            required:
              - name
              - email
      responses:
        200:
          description: Staff updated successfully
          schema:
            $ref: '#/definitions/UpdateStaffResponse'
        404:
          description: User/Staff not found
          schema:
            type: object
            properties:
              message:
                type: string
        500:
          description: Internal Server Error
          schema:
            type: object
            properties:
              message:
                type: string

  /admin/getallstaff:
    get:
      summary: Get All Staff Profiles
      tags:
        - Admin Actions
      consumes:
        - application/json
      produces:
        - application/json
      security:
        - jwtToken: []
      parameters:
        - in: query
          name: page
          description: Page number for pagination
          type: integer
        - in: query
          name: itemsPerPage
          description: Number of items per page
          type: integer
      responses:
        200:
          description: List of staff profiles retrieved successfully
          schema:
            $ref: '#/definitions/GetAllStaffProfilesResponse'
        404:
          description: No staff profiles found
          schema:
            type: object
            properties:
              message:
                type: string
        500:
          description: Internal Server Error
          schema:
            type: object
            properties:
              message:
                type: string

  /admin/getstaffbyrole:
    get:
      summary: Get Staff Profiles by Role
      tags:
        - Admin Actions
      consumes:
        - application/json
      produces:
        - application/json
      security:
        - jwtToken: []
      parameters:
        - in: query
          name: role
          description: Role of the staff members to retrieve
          type: string
          required: true
        - in: query
          name: page
          description: Page number for pagination
          type: integer
        - in: query
          name: itemsPerPage
          description: Number of items per page
          type: integer
      responses:
        200:
          description: List of staff profiles retrieved successfully
          schema:
            $ref: '#/definitions/GetStaffByRoleResponse'
        400:
          description: Bad request - Role is missing
          schema:
            type: object
            properties:
              message:
                type: string
        404:
          description: No staff profiles found with the given role
          schema:
            type: object
            properties:
              message:
                type: string
        500:
          description: Internal Server Error
          schema:
            type: object
            properties:
              message:
                type: string

  /admin/getstaffbyspecialization:
    get:
      tags:
        - Admin Actions
      summary: Get staff profiles by specialization and role
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: role
          schema:
            type: string
          required: true
          description: Role of the staff members
        - in: query
          name: specialization
          schema:
            type: string
          required: true
          description: Specialization of the staff members
        - in: query
          name: page
          schema:
            type: integer
          description: Page number (default: 1)
        - in: query
          name: itemsPerPage
          schema:
            type: integer
          description: Number of items per page (default: 5)
      responses:
        '200':
          description: Successful response with staff profiles
          content:
            application/json:
              example:
                status: 200
                response:
                  - _id: 1234567890
                    name: John Doe
                    role: Doctor
                    specialization: Cardiology
                  - _id: 9876543210
                    name: Jane Smith
                    role: Nurse
                    specialization: Pediatrics
        '400':
          description: Bad request due to missing parameters
          content:
            application/json:
              example:
                message: Bad request, missing parameters
        '404':
          description: No staff profiles found with the given role and specialization
          content:
            application/json:
              example:
                message: No staff profiles found with role: Doctor and specialization: Cardiology
        '500':
          description: Internal server error
          content:
            application/json:
              example:
                message: Server error

  /admin/getallpatient:
    get:
      tags:
        - Admin Actions
      summary: Get all patient profiles
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: Page number (default: 1)
        - in: query
          name: itemsPerPage
          schema:
            type: integer
          description: Number of items per page (default: 5)
      responses:
        '200':
          description: Successful response with patient profiles
          content:
            application/json:
              example:
                status: 200
                response:
                  - _id: 1234567890
                    name: John Doe
                    age: 30
                    gender: Male
                  - _id: 9876543210
                    name: Jane Smith
                    age: 25
                    gender: Female
        '404':
          description: No patient profiles found
          content:
            application/json:
              example:
                message: No patient profiles found
        '500':
          description: Internal server error
          content:
            application/json:
              example:
                message: Server error

  /admin/removestaff/{email}:
    delete:
      tags:
        - Admin Actions
      summary: Remove a staff profile by email
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: email
          schema:
            type: string
          required: true
          description: Email of the staff profile to remove
      responses:
        '200':
          description: Successful response after removing the staff profile
          content:
            application/json:
              example:
                status: 200
                response:
                  message: Staff profile removed successfully
        '404':
          description: Staff profile not found
          content:
            application/json:
              example:
                message: User/Staff profile not found
        '500':
          description: Internal server error
          content:
            application/json:
              example:
                message: Server error

  /admin/logout:
    get:
      tags:
        - Admin Actions
      summary: Logout an admin user
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response after logging out
          content:
            application/json:
              example:
                status: 200
                response:
                  message: Logout successful
        '500':
          description: Internal server error
          content:
            application/json:
              example:
                message: Server error

  /appointment/book:
    post:
      summary: Book an appointment
      description: Book an appointment for a patient with a specific date and slot.
      tags:
        - Appointment Actions
      parameters:
        - in: header
          name: Authorization
          required: true
          description: Bearer token for authentication
          schema:
            type: string
        - in: body
          name: appointment
          required: true
          description: Appointment details
          schema:
            type: object
            properties:
              patientId:
                type: string
              appointmentDate:
                type: string
                format: date
              selectedSlot:
                type: string
              visitReason:
                type: string
              departmentId:
                type: string
      responses:
        '201':
          description: Successfully booked an appointment
          content:
            application/json:
              example:
                message: Appointment booked successfully
        '400':
          description: Bad request or appointment not available
          content:
            application/json:
              example:
                message: You've already booked this appointment slot on the same date.
        '500':
          description: Server error
          content:
            application/json:
              example:
                message: Internal server error

  /appointment/getApp:
    get:
      tags:
        - Appointment Actions
      summary: Get appointment details for a patient
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successfully retrieved appointment details
          content:
            application/json:
              example:
                patientId: 12345
                appointmentDate: '2023-09-01'
                selectedSlot: '10:00 AM - 11:00 AM'
                AppointmentStatus: Scheduled
                visitReason: Regular checkup
                departmentId: 67890
        '400':
          description: Bad request (appointment not found)
          content:
            application/json:
              example:
                message: Appointment not found
        '500':
          description: Internal server error
          content:
            application/json:
              example:
                message: Server error

  /appointment/updateapp:
    put:
      tags:
        - Appointment Actions
      summary: Update appointment details for a patient
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                patientId:
                  type: string
                  description: Patient's ID
                appointmentDate:
                  type: string
                  format: date
                  description: New appointment date
                selectedSlot:
                  type: string
                  description: New selected time slot
                visitReason:
                  type: string
                  description: New visit reason
              required:
                - patientId
                - appointmentDate
                - selectedSlot
                - visitReason
      responses:
        '200':
          description: Successfully updated appointment details
          content:
            application/json:
              example:
                patientId: 12345
                appointmentDate: '2023-09-01'
                selectedSlot: '10:00 AM - 11:00 AM'
                AppointmentStatus: Scheduled
                visitReason: Regular checkup
                departmentId: 67890
        '400':
          description: Bad request (appointment not found or status not pending)
          content:
            application/json:
              example:
                message: Appointment not found or status is not pending
        '500':
          description: Internal server error
          content:
            application/json:
              example:
                message: Server error

  /appointment/cancelapp:
    patch:
      tags:
        - Appointment Actions
      summary: Cancel an appointment for a patient
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: _id
          required: true
          schema:
            type: string
          description: Appointment's ID
      responses:
        '200':
          description: Successfully canceled the appointment
          content:
            application/json:
              example:
                _id: 12345
                patientId: 67890
                appointmentDate: '2023-09-01'
                selectedSlot: '10:00 AM - 11:00 AM'
                AppointmentStatus: Canceled
                visitReason: Regular checkup
                departmentId: 45678
        '400':
          description: Bad request (appointment not found or status not pending)
          content:
            application/json:
              example:
                message: Appointment not found or status is not pending
        '500':
          description: Internal server error
          content:
            application/json:
              example:
                message: Server error

  /medical/addhistory:
    post:
      summary: Add Medical History
      description: Add medical history for a patient's appointment.
      tags:
        - Medical History Actions
      security:
        - bearerAuth: []
      parameters:
        - in: body
          name: medHistoryData
          description: Medical history data to add.
          required: true
          schema:
            type: object
            properties:
              appointmentId:
                type: string
                description: ID of the appointment.
      responses:
        200:
          description: Medical history added successfully.
          schema:
            type: object
            properties:
              message:
                type: string
                description: Success message.
        400:
          description: Bad request.
          schema:
            type: object
            properties:
              message:
                type: string
                description: Error message.
        500:
          description: Internal server error.
          schema:
            type: object
            properties:
              message:
                type: string
                description: Error message.

  /medical/gethistory:
    get:
      summary: Get Medical History
      description: Retrieve medical history for a patient.
      tags:
        - Medical History Actions
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page
          description: Page number (default: 1)
          required: false
          type: integer
        - in: query
          name: itemsPerPage
          description: Number of items per page (default: 5)
          required: false
          type: integer
      responses:
        200:
          description: Medical history retrieved successfully.
          schema:
            type: object
            properties:
              data:
                type: array
                description: List of medical history records.
        400:
          description: Bad request.
          schema:
            type: object
            properties:
              message:
                type: string
                description: Error message.
        500:
          description: Internal server error.
          schema:
            type: object
            properties:
              message:
                type: string
                description: Error message.
  
  /med/getpatienthistory:
    get:
      summary: Get Patient Medical History for staff
      description: Retrieve medical history for a specific patient (for staff).
      tags:
        - Medical History Actions
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: id
          description: ID of the patient (required).
          required: true
          type: string
        - in: query
          name: page
          description: Page number (default: 1).
          required: false
          type: integer
        - in: query
          name: itemsPerPage
          description: Number of items per page (default: 5).
          required: false
          type: integer
      responses:
        200:
          description: Medical history retrieved successfully.
          schema:
            type: object
            properties:
              data:
                type: array
                description: List of medical history records.
        400:
          description: Bad request.
          schema:
            type: object
            properties:
              message:
                type: string
                description: Error message.
        404:
          description: Medical history not found.
          schema:
            type: object
            properties:
              message:
                type: string
                description: Error message.
        500:
          description: Internal server error.
          schema:
            type: object
            properties:
              message:
                type: string
                description: Error message.

  /med/updatehistory/{id}:
    put:
      summary: Update Medical History
      description: Update a specific medical history record (for staff).
      tags:
        - Medical History Actions
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          description: ID of the medical history record to update (required).
          required: true
          type: string
        - in: body
          name: updateMedHistory
          description: Medical history data to update.
          required: true
          schema:
            type: object
      responses:
        200:
          description: Medical history updated successfully.
          schema:
            type: object
            properties:
              message:
                type: string
                description: Success message.
              data:
        400:
          description: Bad request.
          schema:
            type: object
            properties:
              message:
                type: string
                description: Error message.
        404:
          description: Medical history not found.
          schema:
            type: object
            properties:
              message:
                type: string
                description: Error message.
        500:
          description: Internal server error.
          schema:
            type: object
            properties:
              message:
                type: string
                description: Error message.

  /inventory/additem:
    post:
      summary: Add Item to Inventory
      description: Add a new item to the inventory.
      tags:
        - Inventory Actions
      security:
        - invAuth: [] # Define your authentication mechanism here
      parameters:
        - in: body
          name: inventoryData
          description: Inventory item data to add.
          required: true
          schema:
            type: object
      responses:
        201:
          description: Item added to inventory successfully.
          schema:
            type: object
            properties:
              message:
                type: string
                description: Success message.
              data:
        200:
          description: Item updated in inventory successfully.
          schema:
            type: object
            properties:
              message:
                type: string
                description: Success message.
              data:
        400:
          description: Bad request.
          schema:
            type: object
            properties:
              message:
                type: string
                description: Error message.
        500:
          description: Internal server error.
          schema:
            type: object
            properties:
              message:
                type: string
                description: Error message.

  /inventory/getitem/{itemName}:
    get:
      summary: Get Inventory Item
      description: Retrieve details of a specific item from the inventory.
      tags:
        - Inventory Actions
      security:
        - pharmaAuth: [] # Define your authentication mechanism here
      parameters:
        - in: path
          name: itemName
          description: Name of the item to retrieve.
          required: true
          type: string
      responses:
        200:
          description: Item retrieved successfully.
          schema:
            type: object
            properties:
              data:
        404:
          description: Item not found in inventory.
          schema:
            type: object
            properties:
              message:
                type: string
                description: Error message.
        500:
          description: Internal server error.
          schema:
            type: object
            properties:
              message:
                type: string
                description: Error message.

  /inventory/getallitems:
    get:
      tags:
        - Inventory Actions
      summary: Get all inventory items
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          description: Page number for pagination (default: 1)
          required: false
          schema:
            type: integer
        - name: itemsPerPage
          in: query
          description: Number of items per page (default: 5)
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Items retrieved successfully
          content:
            application/json:
              example:
                response:
                  data:
        '404':
          description: No items found
          content:
            application/json:
              example:
                message: No items found
        '500':
          description: Internal server error
          content:
            application/json:
              example:
                message: Server error

  /inventory/updateitem:
    patch:
      summary: Update Inventory Item
      description: Update the inventory items, such as Equipment and Medications.
      tags:
        - Inventory Actions
      security:
        - invAuth: [] # Define your authentication mechanism here
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                Equipment:
                  type: array
                  items:
                    type: object
                    properties:
                      EquipName:
                        type: string
                      Quantity:
                        type: integer
                Medications:
                  type: array
                  items:
                    type: object
                    properties:
                      MedName:
                        type: string
                      Quantity:
                        type: integer
              example:
                Equipment:
                  - EquipName: "Stethoscope"
                    Quantity: 1
                Medications:
                  - MedName: "Aspirin"
                    Quantity: 2
      responses:
        200:
          description: Inventory item updated successfully.
          schema:
            type: object
            properties:
              message:
                type: string
                description: Success message.
              data:
        404:
          description: Inventory not found.
          schema:
            type: object
            properties:
              message:
                type: string
                description: Error message.
        500:
          description: Internal server error.
          schema:
            type: object
            properties:
              message:
                type: string
                description: Error message.

  /medBill/calculate:
    post:
      summary: Calculate Medication Bill
      description: Calculate the medication bill for a patient and update inventory.
      tags:
        - Medication Bill Actions
      security:
        - pharmaAuth: [] # Define your authentication mechanism here
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                patientId:
                  type: string
                  description: The ID of the patient.
                inventoryId:
                  type: string
                  description: The ID of the medication inventory item.
                quantity:
                  type: integer
                  description: The quantity of medication.
              example:
                patientId: "5f9f5a36e15a4a001c996dc2"
                inventoryId: "64e493152256d1ec2f88c69f"
                quantity: 3
      responses:
        200:
          description: Medication bill calculated successfully.
          schema:
            type: object
            properties:
              message:
                type: string
                description: Success message.
              totalAmount:
                type: number
                description: The total amount for the medication bill.
              patientId:
                type: string
                description: The ID of the patient.
        404:
          description: Medication not found in inventory.
          schema:
            type: object
            properties:
              message:
                type: string
                description: Error message.
        500:
          description: Internal server error.
          schema:
            type: object
            properties:
              message:
                type: string
                description: Error message.

  /admit/patient:
    post:
      summary: Admit Patient
      description: Admit a patient to the hospital.
      tags:
        - Admit Actions
      security:
        - bearerAuth: []
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              patientId:
                type: string
                description: The ID of the patient to admit.
              staffId:
                type: string
                description: The ID of the staff member responsible for admission.
              bedType:
                type: string
                description: The type of bed (e.g., "single", "double").
            required:
              - patientId
              - staffId
              - bedType
      responses:
        200:
          description: Success response
          schema:
            type: object
            properties:
              message:
                type: string
                description: Success message (e.g., "Patient Admitted successfully").
        500:
          description: Server Error
          schema:
            type: object
            properties:
              message:
                type: string
                description: Error message (e.g., "Something went wrong during admission").

  /admit/dischargepatient:
    put:
      summary: Discharge Patient
      description: Discharge a previously admitted patient from the hospital.
      tags:
        - Admit Actions
      security:
        - bearerAuth: []
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              patientId:
                type: string
                description: The ID of the patient to discharge.
            required:
              - patientId
      responses:
        200:
          description: Success response
          schema:
            type: object
            properties:
              message:
                type: string
                description: Success message (e.g., "Patient Discharged successfully").
        500:
          description: Server Error
          schema:
            type: object
            properties:
              message:
                type: string
                description: Error message (e.g., "Something went wrong during discharge").

definitions:
  StaffProfileResponse:
    type: object
    properties:
      _id:
        type: string
      name:
        type: string
      email:
        type: string
      role:
        type: string                  

  GetMyPatientResponse:
    type: object
    properties:
      patient:
        $ref: '#/definitions/Patient'
      medicalHistory:
        type: array
        items:
          $ref: '#/definitions/MedicalHistoryWithDoctor'

  GetMyAllPatientsResponse:
    type: array
    items:
      $ref: '#/definitions/PatientWithMedicalHistory'

  UpdateStaffInput:
    type: object
    properties:
      name:
        type: string
      email:
        type: string
      role:
        type: string
      specialization:
        type: string

  UploadProfileResponse:
    type: object
    properties:
      message:
        type: string
      success:
        type: boolean

  LogoutResponse:
    type: object
    properties:
      message:
        type: string

  ForgetPasswordResponse:
    type: object
    properties:
      message:
        type: string

  AdminLoginResponse:
    type: object
    properties:
      message:
        type: string
      token:
        type: string

  AddStaffResponse:
    type: object
    properties:
      message:
        type: string
      data:
        $ref: '#/definitions/StaffData'

  StaffData:
    type: object
    properties:
      _id:
        type: string
      name:
        type: string
      email:
        type: string
      role:
        type: string

  UpdateStaffResponse:
    type: object
    properties:
      message:
        type: string
      response:
        $ref: '#/definitions/StaffData'

  GetAllStaffProfilesResponse:
    type: object
    properties:
      message:
        type: string
      response:
        type: array
        items:
          $ref: '#/definitions/StaffData'

  GetStaffByRoleResponse:
    type: object
    properties:
      message:
        type: string
      response:
        type: array
        items:
          $ref: '#/definitions/StaffData'

securityDefinitions:
  jwtToken:
    type: apiKey
    name: Authorization
    in: header